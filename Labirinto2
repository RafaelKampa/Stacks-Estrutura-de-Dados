package principal;

import java.util.Scanner;

public class Main {

	static int[][] labirinto = { 
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, 
			{ 0, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0 },
			{ 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0 }, 
			{ 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0 },
			{ 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0 }, 
			{ 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0 },
			{ 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0 }, 
			{ 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0 },
			{ 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0 }, 
			{ 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 },
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } 
			};

	static LinkedQueue linha = new LinkedQueue();
	static LinkedQueue coluna = new LinkedQueue();
	static LinkedQueue ultimaPosicaoLinha = new LinkedQueue();
	static LinkedQueue ultimaPosicaoColuna = new LinkedQueue();

	public static void main(String[] args) {
		ultimaPosicaoLinha .add(1);
		ultimaPosicaoColuna.add(1);
		int y = 0;
		int x = 0;
		labirinto[1][1] = 3;

		while (true) {
			for (int i = 0; i <= labirinto.length - 1; i++) {
				System.out.println();
				for (int j = 0; j <= labirinto.length - 1; j++) {
					System.out.print(labirinto[i][j]);
				}
			}

			Scanner sc = new Scanner(System.in);
			System.out.printf("\n Digite L para andar para a Esquerda \n Digite U para andar para Cima \n Digite R para andar para a Direita \n Digite D para andar para Baixo\n");
			String comandoRecebido = sc.nextLine();
			
			// Cima
			if (comandoRecebido.equals("u")) {
				String txtDirecao = "Caminhou para Cima";
				if (labirinto[y-1][x] == 0) {
					System.out.println("Caminho impedido!");
					ultimaPosicaoLinha.remove();
					ultimaPosicaoColuna.remove();
					continue;

				}else if (labirinto[y - 1][x] == 1) {
					System.out.println(txtDirecao + " na linha: " + x + " e coluna: " + (y - 1));
					ultimaPosicaoLinha.add(x);
					ultimaPosicaoColuna.add(y - 1);
					labirinto[y-1][x] = 3;
					continue;
					
				}else if (labirinto[y - 1][x] == 2) {
					System.out.println(txtDirecao + " e conseguiu sair na linha: " + x + " e coluna:  " + (y - 1) + "\n");
					sc.close();
					return;
				}
			}

			// Direita
			if (comandoRecebido.equals("r")) {
				String txtDirecao = "Caminhou para a Direita";
				if (labirinto[y][x + 1] == 0) {
					System.out.println("Caminho impedido!");
					ultimaPosicaoLinha.remove();
					ultimaPosicaoColuna.remove();
					continue;

				} else if (labirinto[y][x + 1] == 1) {
					System.out.println(txtDirecao + " na linha: " + (x + 1) + " e coluna: " + y);
					ultimaPosicaoLinha.add(x + 1);
					ultimaPosicaoColuna.add(y);
					labirinto[y][x+1] = 3;
					continue;
				
				} else if (labirinto[y][x + 1] == 2) {
					System.out.println(txtDirecao + " e conseguiu sair na linha: " + (x + 1) + " e coluna:  " + y + "\n");
					return;
				}
			}

			// Abaixo
			if (comandoRecebido.equals("d")) {
				String txtDirecao = "Caminhou para Baixo";
				if (labirinto[y + 1][x] == 0) {
					System.out.println("Caminho impedido!");
					ultimaPosicaoLinha.remove();
					ultimaPosicaoColuna.remove();
					continue;

				} else if (labirinto[y + 1][x] == 1) {
					System.out.println(txtDirecao + " na linha: " + x + " e coluna: " + (y + 1));
					ultimaPosicaoLinha.add(x);
					ultimaPosicaoColuna.add(y + 1);
					labirinto[y+1][x] = 3;
					continue;
				} else if (labirinto[y + 1][x] == 2) {
					System.out.println(txtDirecao + " e conseguiu sair na linha: " + x + " e coluna:  " + (y + 1) + "\n");
					return;
				}
			}

			// Esquerda
			if (comandoRecebido.equals("l")) {
				String txtDirecao = "Caminhou para a Esquerda";
				if (labirinto[y][x - 1] == 0) {
					System.out.println("Caminho impedido!");
					ultimaPosicaoLinha.remove();
					ultimaPosicaoColuna.remove();
					continue;

				} else if (labirinto[y][x - 1] == 1) {
					System.out.println(txtDirecao + " na linha: " + (x - 1) + " e coluna: " + y);
					ultimaPosicaoLinha.add(x);
					ultimaPosicaoColuna.add(y + 1);
					labirinto[y][x-1] = 3;
					continue;
				} else if (labirinto[y][x - 1] == 2) {
					System.out.println(txtDirecao + " e conseguiu sair na linha: " + (x - 1) + " e coluna:  " + y + "\n");
					return;
				}
			}
		}
	}

	@SuppressWarnings("unlikely-arg-type")
	public static boolean caminhoValido(int y, int x) {

		if (linha.equals(0) || linha.equals(labirinto.length) || coluna.equals(0) || coluna.equals(labirinto.length)) {
			return false;
		}
		return true;
	}

}
